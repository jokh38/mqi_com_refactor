

dashboard:
  auto_start: true  # Set to false to disable automatic dashboard launch
  refresh_interval_seconds: 1 # How often (in seconds) the dashboard refreshes.


# Settings for the main application controller
application:
  # Number of cases to process concurrently. Should ideally match the number of available HPC GPUs.
  max_workers: 4
  # How often (in seconds) to scan the new_cases directory.
  scan_interval_seconds: 60
  # How often (in seconds) to poll the HPC for simulation completion.
  polling_interval_seconds: 300
  # Timeout for local subprocess execution in seconds.
  local_execution_timeout_seconds: 300

# All file system paths, both local and remote.
paths:
  # Base directory for all local data. Change this single path for your environment.
  base_directory: "C:\\MOQUI_SMC"
  local:
    # P1 will watch this directory for new case subdirectories.
    scan_directory: "{base_directory}\\data\\log_SHI"
    # Path to the application's central database file.
    database_path: "{base_directory}\\mqi_communicator\\database\\mqi_communicator.db"
    # The following paths use a {case_id} placeholder that will be dynamically replaced.
    # Directory for intermediate files (CSVs) generated by P2.
    processing_directory: "{base_directory}\\data\\cases\\{case_id}\\intermediate"
    # Directory to download raw simulation output from HPC.
    raw_output_directory: "{base_directory}\\data\\cases\\{case_id}\\raw"
    # Directory for final DICOM files generated by P3.
    final_dicom_directory: "{base_directory}\\data\\cases\\{case_id}\\dicom"
  hpc:
    base_dir: "~/MOQUI_SMC"
    tps_env_dir: "~/MOQUI_SMC/tps_env"
    remote_case_path_template: "~/MOQUI_SMC/cases" # New template for beam-specific paths

# Paths to the external command-line tools P1 will orchestrate
executables:
  python_interpreter: "python"
  mqi_interpreter_script: "{base_directory}\\mqi_interpreter\\main_cli.py"
  raw_to_dicom_script: "{base_directory}\\RawToDCM\\moqui_raw2dicom.py"

# Command templates for external program execution
command_templates:
  mqi_interpreter: >-
    {python_interpreter} {mqi_interpreter_script}
    --logdir {beam_directory}
    --outputdir {output_dir}
  
  raw_to_dicom: >-
    {python_interpreter} {raw_to_dicom_script}
    --input {input_file}
    --output {output_dir}

# Connection details for the HPC server.
hpc_connection:
  host: "10.243.62.128"
  user: "jokh38"
  # Using SSH keys is strongly recommended over passwords for security.
  ssh_key_path: "C:/Users/breezing/.ssh/id_rsa"
  # ssh_key_path: "C:/Users/com/.ssh/id_rsa"

  # SSH connection timeout in seconds
  connection_timeout_seconds: 10
  # SSH command execution timeout in seconds  
  command_timeout_seconds: 600

# Retry policy configuration for handling transient failures
retry_policy:
  max_retries: 3
  initial_delay_seconds: 5
  max_delay_seconds: 60
  backoff_multiplier: 2.0

# Database configuration
database:
  cache_size_mb: 64
  busy_timeout_ms: 5000
  journal_mode: "WAL"
  synchronous_mode: "NORMAL"
  enable_foreign_keys: true

logging:
  # Path for the main log file, relative to base_directory.
    # Directory for log files, relative to base_directory.
  log_dir: "{base_directory}\\mqi_communicator\\logs\\"
  log_level: "INFO"
  console_level: "INFO"
  tz_hours: 9

curator:
  # Command to get detailed GPU hardware statistics from the remote HPC.
  # This is used to detect if a GPU is busy with processes outside of Pueue.
  gpu_monitor_command: "nvidia-smi --query-gpu=uuid,name,memory.total,memory.used,memory.free,temperature.gpu,utilization.gpu --format=csv,noheader,nounits"
  # How often (in seconds) to refresh GPU monitoring data.
  gpu_monitor_interval_seconds: 10

tps_generator:
  validation:
    required_params:
      - 'GPUID'
      - 'DicomDir'
      - 'logFilePath'
      - 'OutputDir'
      - 'BeamNumbers'
  # Default paths for the remote Linux environment.
  # These are used when not running in HPC mode or if hpc config is missing.
  default_paths:
    base_dir: "/home/gpuadmin/MOQUI_SMC"
    interpreter_outputs_dir: "/home/gpuadmin/Outputs_csv"
    outputs_dir: "/home/gpuadmin/Dose_raw"

# Parameters for generating moqui_tps.in file generation
# as per mqi_param_gen.md
moqui_tps_parameters:
  GPUID: 0  # Will be dynamically set from pueue_group
  RandomSeed: -1932780356
  UseAbsolutePath: true
  Verbosity: 0
  UsingPhantomGeo: true
  PhantomDimX: 400
  PhantomDimY: 400
  PhantomDimZ: 400
  PhantomUnitX: 1
  PhantomUnitY: 1
  PhantomUnitZ: 1
  PhantomPositionX: -200.0
  PhantomPositionY: -200.0
  PhantomPositionZ: -380.0
  Scorer: Dose
  SupressStd: true
  ReadStructure: true
  ROIName: External
  DicomDir: ""  # Will be dynamically set
  logFilePath: ""  # Will be dynamically set
  SourceType: FluenceMap
  SimulationType: perBeam
  ScoreToCTGrid: true
  OutputFormat: raw
  OverwriteResults: true
  TotalThreads: -1
  MaxHistoriesPerBatch: 10000
  BeamNumbers: 1  # Will be dynamically set
  ParticlesPerHistory: 1
  TwoCentimeterMode: true
  ParentDir: ""  # Will be dynamically set
  OutputDir: ""  # Will be dynamically set
  GantryNum: 0  # Will be dynamically set
