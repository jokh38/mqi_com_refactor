üóÇ Legacy Code Location and Structure
- The legacy code is located in the /mqi_communicator0905 directory.
- This folder contains the complete legacy codebase, along with JSON-interpreted versions of Python scripts for easier readability.

üîÑ Transition Plan
- In the current system, the input.mqi file is used by the worker process.
- This input.mqi file corresponds to the moqui_tps.ini file from the legacy code.
- You plan to refactor the current code to use moqui_tps.ini from the legacy system instead of input.mqi.
- To do this, you will:
- Analyze the legacy code.
- Compare it with the current code‚Äôs workflow and structure.
- Propose a modification plan.
- Document the plan in tps_ini.md.

‚öôÔ∏è Current Workflow Analysis
1. Required Input Files
- In the InitialState class, the workflow begins by checking for the presence of input.mqi and config.json.
- If either file is missing, the case immediately transitions to FailedState.
- This confirms that input.mqi is a critical prerequisite for initiating the workflow.
# src/domain/states.py - InitialState class
required_files = ["input.mqi", "config.json"]
for file_name in required_files:
    required_file = context.case_path / file_name
    if not required_file.exists():
        return FailedState()



2. Preprocessing Stage
- In the PreprocessingState class, input.mqi is used as input for a local process called mqi_interpreter.
- This process reads input.mqi and generates a preprocessed.json output file.
# src/domain/states.py - PreprocessingState class
input_file = context.case_path / "input.mqi"
output_file = context.case_path / "preprocessed.json"
result = context.local_handler.run_mqi_interpreter(
    input_file=input_file,
    output_file=output_file,
    case_path=context.case_path
)



3. Upload to HPC Cluster
- In the FileUploadState class, input.mqi is uploaded to the HPC cluster along with preprocessed.json and config.json.
- This indicates that input.mqi is also required in remote simulation environments.
# src/domain/states.py - FileUploadState class
files_to_upload = [
    "preprocessed.json",
    "config.json",
    "input.mqi"
]



‚úÖ Conclusion
- The input.mqi file contains essential initial settings and parameters for case processing.
- It is used across multiple workflow stages: validation, preprocessing, and HPC upload.
- Without this file, the entire process cannot begin
